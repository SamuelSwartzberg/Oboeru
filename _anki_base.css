/*
#content is the label applied to the child of body, but containing the div #qa on ankidroid
On desktop, #qa is a direct child of body, and on both platforms, #qa  contains the actual html we wrote
since #qa is broken on android, we need to refer to it with .question or .answer respectively - not anymore
*/
/* Reset user agent or anki style rules*/

hr, div:empty, br, #_flag, #_mark, #MathJax-Element-4~br{ display: none;}

svg{display: block !important;}

em, i, u, font, ins, s, strike, del, cite, var, address, dfn, tt, code, kbd, samp, a, a.replaybutton, pre, xmp, plaintext, listing{
    font-style: unset; text-decoration: unset; font-family: unset;}
big, small, h1, h2, h3, h4, h5, h6 {font-size: unset;} strong, b {font-weight: unset;}
mark{color: unset; background-color: unset;}
blockquote, q { quotes: none; } blockquote::before, blockquote::after, q::before, q::after { content: ''; content: none; }

/*Reset Anki-specific behaviors*/
body{overflow-wrap: break-word;}
img{ max-width: 100% !important; max-height: 100% !important;}
.typeGood, .typeBad, .typeMissed{background-color: transparent;}
.card, body.nightMode.card {background-color: white;}
.MJXc-display{margin: 0!important;}
font {color:unset!important;}
.replaybutton span{display: initial; vertical-align: initial; padding: 0;}

div, img, textarea, body, p, pre, #content { padding: 0; margin: 0;}
blockquote, abbr, acronym, address, big, cite, del, dfn, ins, section, summary,
time, mark, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td, article, aside{ margin: 0; padding: 0; border: 0;}

textarea{ font-family: inherit; resize: none; color: inherit; border-width: 0;}

pre{white-space: pre-wrap; line-height: 0; /*fix for css adding unwanted whitespace*/}
ul, ol{margin-block-start: 0.5rem; margin-block-end: 0.5rem; list-style: inside; text-align: left; padding-inline-start: 1rem;}

.background{ position: fixed; top: 0px; bottom: 0px; left: 0px; right: 0px; z-Index: -1;} /*This used to be used as a background, but is now only used to make sure the correct color variables are used.*/

/*Warning classes to show the user that there is unwanted HTML that breaks something*/
.imageSection > div > div{ background-color: red !important; }

/* Set the basic variables */
body{
    --basic-unit-of-distance: 0.5rem;
    --border-width-medium: 0.1rem 0.1rem 0.2rem 0.1rem;
    --border-width-large: 0.2rem 0.2rem 0.3rem 0.2rem;
    --tiny-distance: calc(var(--basic-unit-of-distance)*0.5);
    --small-distance: calc(var(--basic-unit-of-distance));
    --smallish-distance: calc(var(--basic-unit-of-distance) * 1.5);
    --medium-distance: calc(var(--basic-unit-of-distance) * 2);
    --largeish-distance: calc(var(--basic-unit-of-distance) * 2.5);
    --large-distance: calc(var(--basic-unit-of-distance) * 3);
    --square-tappable-distance: 2.5rem;}

/*Color styling*/
.background~*{
    --main-light-color: 255,255,255;
    --dark-sheer-color:  rgba(var(--dark-color),0.02);
    --dark-sheer-color-no-transparency: rgb(254,250,250);
    --max-dark-color: rgb(var(--dark-color));
    --dark-deemphasize-color: rgba(var(--dark-color),0.55);
    --dark-fivepercent-color: rgba(var(--dark-color),0.05);
    --dark-tenpercent-color: rgba(var(--dark-color),0.15);
    --dark-fifteenpercent-color: rgba(var(--dark-color),0.15);
    --dark-medium-bg-color: rgba(var(--dark-color), 0.7);
    --light-full-color: rgb(var(--main-light-color));
    --light-deemphasize-color: rgba(var(--main-light-color),0.8);
    --light-slight-color: rgba(var(--main-light-color),0.05);
    --black-fivepercent-color: rgba(0,0,0,0.05);
    --black-slight-color: rgba(0,0,0,0.15);
    --good-color: #11ce00;
    --bad-color: #f00;
    --missed-color: #888;
    --selected-color: #1cb0f6;
    --selected-dark-color: #0788c5;
    --selected-deemphasize-color: #d1effd;
}

/*TEMP*/

.overlay-hide {
    display: block!important;
    width:calc( 100vw - var(--medium-distance) );
    height:100vh;
    position: absolute;
    background-color:white;
    animation: 0.8s hide forwards;
    margin: 0 !important;
}
@keyframes hide { from { visibility: visible; } to { visibility: hidden;} }
.replaybutton{background-color: var(--selected-color);
    border-color: var(--selected-dark-color);
    width: 3.5rem;
    padding: 0;
    height: 3.5rem;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;}

/*Default*/
.background~*{ --dark-color: 17,92,184;}
[data-tag*="ja"]~* { --dark-color: 200,0,0;}
[data-tag*="es"]~* { --dark-color: 140,106,154;}
[data-tag*="phil"]~* { --dark-color: 0,108,15;}
[data-tag*="code"]~*, [data-tag*="soft"]~*{ --dark-color: 9,10,13;}

/*Text&co*/
.cardlet.frontSide, .frontSide .highlightMain, .frontSide .reorderText i, .frontSide .selectText u, .frontSide .selectText strike{color: var(--max-dark-color);}
.frontSide a:not(.replaybutton), .backSide .key{color: var(--dark-medium-bg-color);}
.cardlet.backSide, .frontSide a:not(.replaybutton), .frontSide {color: var(--light-full-color);}
.frontSide .textDeemphasize{ color: var(--dark-deemphasize-color);}
.backSide .textDeemphasize,#back-indicator-token~* .questionedElements > div > .contentBox.if-mult-choice-correct .textDeemphasize, #back-indicator-token~* .questionedElements > div .contentBox.selectedBox:not(.if-mult-choice-correct) .textDeemphasize{ color: var(--light-deemphasize-color);}
body .typeGood, body .typeBad,#back-indicator-token~* .questionedElements > div > .contentBox.if-mult-choice-correct, #back-indicator-token~* .questionedElements > div .contentBox.selectedBox:not(.if-mult-choice-correct), .frontSide .selectText .selected, #back-indicator-token~* .selectText u, #back-indicator-token~* .selectText strike.selected, .frontSide .contentBox.selectedBox{color: var(--light-full-color);}
#control-container svg { fill: var(--dark-fifteenpercent-color)!important;}
#back-indicator-token~* .questionedElements > div .contentBox.selectedBox:not(.if-mult-choice-correct){ color: var(--light-full-color);}
.frontSide .contentBox.selectedBox .textDeemphasize{ color: var(--selected-deemphasize-color);}

/*BG*/
.cardlet.frontSide{ background-color: var(--dark-sheer-color);}
.cardlet.backSide, .frontSide a:not(.replaybutton){ background-color: var(--dark-medium-bg-color);}
.frontSide .contentBox, .frontSide #typeans, .scratchpad textarea, .frontSide .reorderText i, .frontSide .selectText u, .frontSide .selectText strike, .frontSide .highlightMain{ background-color: var(--dark-fivepercent-color); }
.backSide .contentBox, .frontSide code, .backSide .highlightMain{ background-color: var(--black-fivepercent-color);}
#back-indicator-token~* .selectText u{background-color: var(--missed-color)}
#back-indicator-token~* .questionedElements > div > .contentBox.if-mult-choice-correct, body .typeGood, #back-indicator-token~* .selectText u.selected{background-color: var(--good-color);}
#back-indicator-token~* .questionedElements > div .contentBox.selectedBox:not(.if-mult-choice-correct), body .typeBad, #back-indicator-token~* .selectText strike.selected{ background-color: var(--bad-color);}
.typeMissed{ background-color: var(--dark-fivepercent-color);}
.backSide a:not(.replaybutton){background-color: var(--light-deemphasize-color);}
.backSide .key{background-color: var(--light-full-color);}
.backSide :not(pre) > code{background-color: var(--black-slight-color);}
.frontSide .contentBox.selectedBox, .frontSide .selectText .selected{ background-color: var(--selected-color);}

/*border*/
.cardlet.frontSide{ border-color: var(--dark-fivepercent-color);}
.imageSection img{ border-color: var(--dark-tenpercent-color);}
.cardlet.backSide{ border-color: var(--black-slight-color);}
.frontSide ~ .imageSection img, .backSide a:not(.replaybutton), .backSide .key {border-color: var(--dark-fifteenpercent-color);}
.frontSide .contentBox, .frontSide .reorderText i, .frontSide .selectText u, .frontSide .selectText strike, .frontSide #typeans, .frontSide .highlightMain, .scratchpad textarea{ border-color: var(--dark-fivepercent-color);}
.backSide .contentBox, .frontSide a:not(.replaybutton), #back-indicator-token~* .questionedElements > div > .contentBox.if-mult-choice-correct,#back-indicator-token~* .questionedElements > div .contentBox.selectedBox:not(.if-mult-choice-correct), #back-indicator-token~* .selectText u, #back-indicator-token~* .selectText strike.selected, .backSide .highlightMain{ border-color: var(--black-slight-color);}
.frontSide .contentBox.selectedBox, .frontSide .selectText .selected{ border-color: var(--selected-dark-color);}

/* Set the relevant fonts */
.card, code#typeans { font-family: Rubik, KosugiMaru;}
code { font-family: Inconsolata;}
.ipa {font-family: DejaVuSans;}

/* Set the font-sizes*/
body {font-size: var(--large-distance);}
.extraInfoSection, #frontTags {font-size: var(--largeish-distance);}
pre code {font-size: var(--medium-distance)}

/* Set the font weights*/
#frontTags {font-weight: normal;}
b, .headerSection, .cloze, .key, font {font-weight: bold;}

/*Set the text alignments, as long as they are not css hacks*/
.card {text-align: center;}
#frontTags, code {text-align: left;}

/*Set other font-related properties*/
pre code{line-height: var(--medium-distance);}
.questionedElements{line-height: calc(1.33 * var(--large-distance));}

/*Set the box models with width or height 100% and border-box*/
.imageSection > div, .imageSection { width: 100%; height: 100%; box-sizing: border-box;}

/*Set specific word-break behaviors*/
.contentBox{word-break: break-all; }
.reorderText i, .frontSide .selectText u, .frontSide .selectText strike, .highlightMain{word-break: keep-all;}

/*Flow: Set the padding, margins, etc. of things that dynamically appear*/
.imageSection img { margin: var(--small-distance)}
.contentBox{ padding: var(--smallish-distance);}
.key{--key-size: calc(6 * var(--basic-unit-of-distance)); display: inline-block; width: var(--key-size); height: var(--key-size); text-align: center; margin: auto var(--small-distance); line-height: var(--key-size);}
.questionedElements > div > div { --margins-lr: var(--small-distance); margin-left: var(--margins-lr); margin-right: var(--margins-lr); }
pre{overflow: hidden; margin: var(--tiny-distance) 0;} pre code{min-width: calc(100vw - 6.5rem); padding-top: var(--smallish-distance); padding-bottom: var(--smallish-distance); padding-left: var(--medium-distance); margin: 0;}
.reorderText i, .frontSide .selectText u, .frontSide .selectText strike, .highlightMain{padding: var(--tiny-distance) var(--small-distance); margin:var(--tiny-distance); }
.reorderText > div > div:not(:empty), .reorderText > div > div > div:not(:empty), .selectText > div > div > div:not(:empty), .selectText > div > div > div:not(:empty) { display: flex; flex-wrap: wrap; align-items: baseline;}
.reorderText i, .frontSide .selectText u, .frontSide .selectText strike, .highlightMain{display: inline-block;}
code, a { display: inline-block; padding-left: var(--small-distance); padding-right: var(--small-distance); margin: 0 var(--tiny-distance);}

/*Children: Set the padding, margins of things that only ever occur within containers*/
.key span{ display: inline-block; vertical-align: middle; line-height: normal; }
.contentBox > div{ margin-bottom: var(--small-distance); } .contentBox > div:last-child{ margin-bottom: 0; }

/*things that have borders */
.cardlet, .imageSection img, .key, a.replaybutton, .contentBox, a, .highlightMain, .reorderText i, .frontSide .selectText u, .frontSide .selectText strike {border-style: solid;}
/* things that have big borders */
.cardlet, .imageSection img{border-radius: var(--medium-distance); border-width: var(--border-width-large);}
/* things that have medium borders */
a.replaybutton, .key, .reorderText i, .frontSide .selectText u, .frontSide .selectText strike, .highlightMain{border-radius: var(--small-distance); border-width: var(--border-width-medium); }
/* things that have small borders */
a{border-radius: var(--tiny-distance); border-width: var(--border-width-medium);}
/* things that have even borders */
.contentBox, #typeans {border-radius: var(--small-distance); border-width: 0.2rem 0.2rem 0.2rem 0.2rem }
/*other*/
code, textarea, pre{border-radius: var(--tiny-distance);}

/*Specific styling classes*/
.ipa{line-height: 100%;/*Make sure that large IPA symbols don't kill alignment*/} .ipa:before{ content: "["; } .ipa:after{ content: "]"; }
.allCaps{ text-transform: uppercase; }
font{font-size: 0px;line-height: 0px;} /*fake clozes*/ font::after{content: "___"; font-size: initial;}
#back-indicator-token~* font {font-size: inherit;line-height: inherit;} #back-indicator-token~* font::after{content: normal;}

/* Layouting: Sizing and alignment for the regular elements*/
body > #qa, #content > .question, #content > .answer{margin: 0 var(--small-distance) 0 var(--small-distance); display: flex; flex-direction: column; justify-content: flex-end; min-height: 100vh;}
body > #qa > div, #content > .question > div, #content > .answer > div {margin-top: var(--small-distance); margin-bottom: var(--small-distance);}

.media-container{position: fixed; display: flex; flex-flow: row-reverse wrap; top:var(--medium-distance); right:var(--medium-distance);}

.imageSection {margin: 0 0 0 calc(-1 * var(--small-distance))!important; width: calc(100% + 2 * var(--small-distance))}
.imageSection > div{display: flex; flex-wrap: wrap; align-items: baseline; }
.imageSection img {flex-basis: 45%; min-width:45%; flex-shrink: 1; flex-grow: 1; object-fit: cover; box-sizing: border-box; margin: var(--small-distance); line-height:0px; max-height: 65vh!important;}
.imageSection img:only-of-type, img.fullsize-image{ flex-basis: 95%; min-width: 95%;}

.cardlet { width: 100%; margin: var(--medium-distance) 0; overflow: hidden; box-sizing: border-box;}

.bodySection>div.headerSection{ padding-top: var(--large-distance); padding-bottom: var(--medium-distance)}
.bodySection{padding-left: var(--medium-distance); padding-right: var(--medium-distance);}
.questionedContentSection>:not(:only-of-type){ padding-bottom:var(--smallish-distance);}
.questionedContentSection>:not(:only-child){padding-bottom: var(--medium-distance);}
#frontTags{padding-top: var(--small-distance);padding-bottom: var(--medium-distance);} #frontTags:only-of-type { padding-top: var(--medium-distance); }
.extraInfoSection:only-child {padding: var(--medium-distance) 0;}
.extraInfoSection > div {margin-bottom: var(--small-distance);} .extraInfoSection > div:only-of-type, .extraInfoSection > div:last-child {margin-bottom: 0;}
.questionedElements{ display:flex; justify-content: center; padding: var(--medium-distance) 0; }
/*optional class*/.flexDirectionColumn{flex-direction: column;}.flexWrap{flex-wrap: wrap;}
.questionedElements > div { min-width: 0; flex-shrink: 1; }
.inputSection {margin: var(--small-distance) 0;}
.frontSide .contentBox{ width: 100vw; box-sizing: border-box; max-width: calc(100% - 2 * var(--margins-lr)); height: 100%; }

/* Type answer */
.inputSection center{margin-bottom: 35vh;}
#typeans { text-align: center; display: inline-block; padding: var(--medium-distance); max-width: fit-content; }
#typeans br { display: block; }
#typeans>span { padding: var(--small-distance); border-radius: var(--small-distance); margin: var(--tiny-distance); line-height: 3.5rem; }

/*Styling rules for dynamically added elements only*/

/* Text scratchpad */
#content .scratchpad:last-of-type {margin-bottom: 40vh!important;}
.scratchpad>div{padding: var(--smallish-distance);}
.scratchpad textarea{width: 100%; min-height: calc(5 * var(--medium-distance));}
/* Sketchpad */
#control-container{ display: flex; flex-direction: column; position: absolute; margin-right: var(--large-distance); margin-top: var(--small-distance); right: 0; }
#control-container > div{margin-top: var(--small-distance); margin-bottom: var(--small-distance);}
#color-picker-toggle{height: var(--square-tappable-distance); width: var(--square-tappable-distance);}
#sketchpadContainer{height: 30vh;}
#color-picker{display: none;}
#color-picker > div{height: var(--square-tappable-distance); flex-grow: 1; background-color: var(--selection-color);}

#sketchpadContainer{ background-repeat: no-repeat; background-size: cover; }

/* Calculator */
.calc {width: 100%; display: flex; flex-direction: column; align-items: center; justify-content: flex-start; font-weight: 300; box-sizing: border-box; overflow: hidden; }
.calc *{ box-sizing: border-box; }
.top { width: 100%; color: var(--max-dark-color); }
.result { box-sizing: border-box; width: 100%; height: 3.6rem; font-size: 16px; margin: 0; padding: 7px 10px 0px 10px; text-align: left; opacity: 0.6; overflow: hidden; }
.screen { width: 100%; height: 50px; border: 0; font-size: 30px; padding: 0px 20px 5px 5px; text-align: right; display: flex; align-items: baseline; justify-content: flex-end; overflow: hidden; }
.hints { opacity: 0.3; }
.keyboard { background-color: var(--dark-fivepercent-color); width: 100%; }
.crow { display: flex; flex-direction: row; align-items: stretch; justify-content: space-around; width: 100%; min-height: 50px; margin: auto; }
.cb { box-sizing: border-box; width: 100%; background-color: var(--dark-fivepercent-color); cursor: pointer; display: flex; flex-direction: row; align-items: center; justify-content: center; box-shadow: none; transition: all 0.2s; -moz-user-select: none; -khtml-user-select: none; -webkit-user-select: none; -o-user-select: none;}
.screentext {display: flex;flex-direction: row;align-items: center;justify-content: center;}
.animated {position: relative;top: 0;animation: movetext1 .2s 1;}
@keyframes movetext1 {0% {top: 100px;}100% {top: 0px;}}
.calc sup {vertical-align: text-top;font-size: 0.5em;}
.inv {display: none;}
.lighter {background-color: var(--light-deemphasize-color);font-size: 1.2rem;}
.operands, .enter {background-color: var(--dark-fifteenpercent-color); font-size: 1.6rem;}

/* Personal collection-specific color manipulation*/
.extraInfoSection img[src*=".png"] { filter: invert(100%) brightness(1.5) blur(0.1px); height: var(--largeish-distance); opacity: 0.7; vertical-align: text-top; display: inline;}

/* Font-Faces */
@font-face { font-family: 'Rubik'; font-style: normal; src: local('Rubik'); src: url('_Rubik-Regular.ttf') format('truetype');}
@font-face {font-family: 'KosugiMaru'; font-style: normal; src: local('_KosugiMaru');src: url('_KosugiMaru-Regular.ttf') format('truetype');}
@font-face {font-family: 'Inconsolata'; font-style: normal; src: local('_Inconsolata');src: url('_Inconsolata.ttf') format('truetype');}
@font-face {font-family: 'DejaVuSans'; font-style: normal; src: local('_DejaVuSans');src: url('_DejaVuSans.ttf') format('truetype');}
